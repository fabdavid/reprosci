<% article_attr = @article.attributes %>
<p id="notice"><%= notice %></p>

<div class='card mb-3'>
  <div class='card-body'>
    <div class='float-right'>
      <% if annotable?(@workspace) %>
      <%= link_to "Delete", article_path(:key => @article.key), method: :delete, data: { confirm: 'Are you sure?' }, :class => "btn btn-danger" %>      
      <% end %>
      <button class='back-workspace btn btn-success' type='button'>Back to workspace</button>
    </div>
    <h4 class='card-title'>
      <b>Reference</b>
      <small><sup><%= link_to(raw("<i class='fas fa-external-link-alt'></i>"), "https://www.ncbi.nlm.nih.gov/pubmed/#{@article.pmid}") %></sup> 
      <% if annotable? @workspace %>
      [<%= @article.num %>]
      <div id='validation_container'>
      <% if !@article.validated_at %>
      <button id='validated-btn' class='btn btn-outline-danger' type='button'>
	Not validated <!--<%= (@article.validated_at) ? 'Validated' : 'Not validated' %>-->
      </button>
      <% else %>
      <span class='text-success'>Validated</span>
      <button id='unvalidated-btn' class='btn btn-sm btn-outline-danger' type='button'>
       <i class='fa fa-times'></i>
      </button>

      <% end %>
      <% end %>
      </div>
      </small>
    </h4> 
    <div class=''>
      <h4><%= raw @article.title %></b></h4>
      <%= authors = @article.authors.split(";").select{|e| !e.strip.empty?}; raw authors.map{|a| "<span class='badge badge-light'>#{a}</span>"}.join(" ") %> 
      <br/>
      <span class='font-italic'><%= raw (j = @article.journal) ? j.name : 'NA' %></span>. <span><%= @article.year %></span>.
    </div>
  </div>
</div>

<div class='card mb-3'>
  <div class='card-body'>
    <h4 class='card-title'><b>Abstract</b></h4>
    <div class=''><%= raw @article.abstract %></div>
  </div>
</div>

<% [:main_claim, :major_claim, :minor_claim, :method, :additional_context, :additional_file, :reference].each do |claim_type| %>
<div id='assertion_type_container_<%= @h_assertion_types_by_name[claim_type.to_s].id %>' class='assertion_type_container'>
 <%= render :partial => 'display_assertion_type', :locals => {:assertion_type => @h_assertion_types_by_name[claim_type.to_s]} %>
</div>
<% end %>

<!--<div id='additional_files' class='card mb-3'>
  <div class='card-body'>
    <div class='float-right'>
      <% if annotable? @workspace %>
      <button type='button' id='add_file' class='btn btn-xs btn-info add_file'><i class='fa fa-plus'></i> Add file %></button>
      <% end %>
    </div>
    <h4 class='card-title'><b>Additional files</b></h4>
    <div>
      <%# @additional_files.each do |additional_file| %>
      <%# end %>
    </div>

  </div>
</div>
-->
<!--
<div id='additional_context-card' class='card mb-3'>
  <div class='card-body'>
    <h4 class='card-title'><b>Additional context</b></h4>
    <div id='additional_context_container'>
      <%= render :partial => 'show_attribute', :locals => {:article_attr => article_attr, :attr => "additional_context"} %>
    </div>
  </div>
</div>

<div id='references-card' class='card mb-3'>
  <div class='card-body'>
    <h4 class='card-title'><b>References</b></h4>
    <div id='references_txt_container'>
    <%= render :partial => 'show_attribute', :locals => {:article_attr => article_attr, :attr => "references_txt"} %>
    </div>
  </div>
</div>
-->
<!--<div class='alert alert-success'>
    <%# raw (@h_assertion_ids_by_type[:method]) ? ("<ul>" + @h_assertion_ids_by_type[:method].map{|a| "<li>#{a.content}</li>"}.join(" ") + "</ul>") : 'Not annotated yet' %>
</div>
-->

<%# @article.claims.size %>
<%# @article.genes.size %>

<%= hidden_field_tag 'selected_assertion_id', '' %>

<!--
<%# link_to 'Edit', edit_article_path(@article) %> |
<%# link_to 'Back', articles_path %>
-->

<%= javascript_tag do %>

var h_rel_types = <%= raw @h_rel_types.to_json %>

$("#validation_container").on("mouseover", "#validated-btn", function(){
console.log("testkkk")
$(this).html("Validate")
$(this).removeClass("btn-outline-danger")
$(this).addClass("btn-success")
})
$("#validation_container").on("mouseout", "#validated-btn", function(){
$(this).html('Not validated')
$(this).removeClass("btn-success")
$(this).addClass("btn-outline-danger")
})
$("#validation_container").on("click", "#validated-btn", function(){
var p = [{name : 'validate', value : '1'}]
refresh_post('validation_container', "<%= raw validate_article_path(:key => @article.key) %>", p, 'post', {})
})

$("#validation_container").on("click", "#unvalidated-btn", function(){
var p = [{name : 'validate', value : '0'}]
refresh_post('validation_container', "<%= raw validate_article_path(:key => @article.key) %>", p, 'post', {})
})


/*
$("#additional_files").on("click", "#add_file", function(){
 $("#ontop_popup_container").empty()
 $("#ontop_popup_window").removeClass("hidden")
 refresh("ontop_popup_container", "<%# raw new_additional_file_path(:article_key => @article.key) %>", {loading : 'fa-2x'})
 var w = $(window).width();
  $("#ontop_popup_window").css({
        left: 200,
        width:w - 250,
        height:'auto',
        top: e.pageY + 10
    }).stop().show(100);

}
*/

$("#content_container").on("click", ".attr_edit_btn", function(){
 var attr_name = this.id.split("-")[1]
 $("#" + attr_name).removeClass("hidden")
 $("#upd-" + attr_name).removeClass("hidden")
 $("#edit-" + attr_name).addClass("hidden")
})

$("#content_container").on("click", ".attr_upd_btn", function(){
//$(".attr_upd_btn").click(function(){
 var attr_name = this.id.split("-")[1]
 console.log(attr_name)
 var p = [
  {name : "article[" + attr_name + "]", value : $("#" + attr_name).val()},
  {name : "attr_name", value : attr_name},
  {name : "partial", value : "attr"}
 ]
 refresh_post(attr_name + "_container", "<%= article_path(:key => @article.key) %>", p, "put", {loading:'fa-2x'})

})

$(".back-workspace").click(function(){
window.location = "<%= workspace_path(:key => @workspace.key, :tab => params[:tab] || 'articles') %>"
})

/*
function upd_job_popup(){
   console.log("bla!!")
   $("#new_job_main_btn").addClass('hidden')
   place_new_analysis_form_window();
   let url = "<%# form_new_analysis_project_path(@project.key, :step_id => @step.id) %>";
   refresh("new_analysis_form_content", url, {loading:'fa-2x'})
}

 $(".new_job_popup").click(function(){
  var window_status = $("#new_analysis_form_window_status").val()
  if ($("#new_analysis_form").hasClass("hidden") || window_status != 'fixed'){
    upd_job_popup()
  }else{
   $("#new_analysis_form_close").click();
  }
 })
*/

$(".assertion_type_container").on("click", ".view-rel-btn", function(e){
 var t = this.id.split("_")

 // unselect existing selection
 unselect_assertion()

 // select new
 $("#selected_assertion_id").val(t[2])
 place_side_panel();
 let url = "<%= raw assertions_path() %>/" + t[2] + "/get_details?article_key=<%= @article.key %>&rel_type_id=" + t[1];
 refresh("side_panel_content", url, {loading:'fa-2x'})
})

function add_rel(dom_el, e){
 var t = dom_el.id.split("_")
 var assertion_id = t[2]
 var rel_type_id = t[3]
 $("#ontop_popup_container").empty()
 $("#ontop_popup_window").removeClass("hidden")
 refresh("ontop_popup_container", "<%= raw new_rel_path(:article_key => @article.key) %>&complement_id=" + assertion_id + "&rel_type_id=" + rel_type_id, {loading : 'fa-2x'})
 var w = $(window).width();
  $("#ontop_popup_window").css({
        left: 200,
        width:w - 250,
        height:'auto',
        top: e.pageY + 10
    }).stop().show(100);
}

$(".assertion_type_container").on("click", ".add_rel", function(e){
 add_rel(this, e)
})

$("#side_panel_content").on("click", ".add_rel", function(e){
 add_rel(this, e)
})

$(".assertion_type_container").on("click", ".badge-tag", function(e){
<%= render :partial => 'shared/badge_tag_js' %>
})

$(".assertion_type_container").on("click", ".history-btn", function(e){
 var assertion_id = this.id.split("_")[1]
 $("#ontop_popup_window").removeClass("hidden")
 refresh("ontop_popup_container", "<%= raw assertions_path() %>/" + assertion_id + "/get_history?article_key=<%= @article.key %>", {loading : 'fa-2x'})
 var w = $(window).width();
  $("#ontop_popup_window").css({
        left: 200,
        width:w - 250,
        height:'auto',
        top: e.pageY + 10
    }).stop().show(100);
})

$(".assertion_type_container").on("click", ".add_assert", function(e){
 var assertion_type_id = this.id.split("_")[2]
 $("#ontop_popup_container").empty()
 $("#ontop_popup_window").removeClass("hidden")
 refresh("ontop_popup_container", "<%= raw new_assertion_path(:article_key => @article.key) %>&assertion_type_id=" + assertion_type_id, {loading : 'fa-2x'})
 var w = $(window).width();
  $("#ontop_popup_window").css({
        left: 200,
        width:w - 250,
        height:'auto',
        top: e.pageY + 10
    }).stop().show(100);
})

$(".assertion_type_container").on("click", ".edit_assert", function(e){
 var to_refresh_assertion_type_id = $(this).parents(".assertion_type_container").first().attr("id").split("_")[3]
 console.log("bla: " + this.id +  " : " + to_refresh_assertion_type_id)
 var assertion_id = this.id.split("_")[2]
 $("#ontop_popup_container").empty()
 $("#ontop_popup_window").removeClass("hidden")
 refresh("ontop_popup_container", "<%= raw assertions_path() %>/" + assertion_id + "/edit?article_key=<%= @article.key %>&to_refresh_assertion_type_id=" + to_refresh_assertion_type_id, {loading : 'fa-2x'})
 var w = $(window).width();
 $("#ontop_popup_window").css({
        left: 200,
        width:w - 250,
        height:'auto',
        top: e.pageY + 10
 }).stop().show(100);
})

$("#side_panel_content").on("click", ".edit_assert", function(e){
console.log("blou")
 var assertion_id = this.id.split("_")[2]
 $("#ontop_popup_container").empty()
 $("#ontop_popup_window").removeClass("hidden")
 var selected_tab = $("#side_panel_content").find(".active").first() 
 var rel_type_id = $(selected_tab).attr("id").split("-")[1]
 if (h_rel_types[rel_type_id]){ 
   rel_type_id = h_rel_types[rel_type_id]
 }
 refresh("ontop_popup_container", "<%= raw assertions_path() %>/" + assertion_id + "/edit?article_key=<%= @article.key %>&refresh_side_panel=" + rel_type_id + "&complement_id=" + $("#selected_assertion_id").val(), {loading : 'fa-2x'})
 var w = $(window).width();
 $("#ontop_popup_window").css({
        left: 200,
        width:w - 250,
        height:'auto',
        top: e.pageY + 10
 }).stop().show(100);
})

$(".assertion_type_container").on("click", ".del_assert", function(e){
 if (confirm("Please confirm you want to delete this entry")){
  var assertion_id = this.id.split("_")[2]
  var card = $(this).parents()[3]
  var to_refresh_assertion_type_id = $(this).parents(".assertion_type_container").first().attr("id").split("_")[3]
  $(card).css({'background-color' : 'red'})
  $("#ontop_popup_window").removeClass("hidden") 
  var p = [{name : 'assertion[obsolete]', value : true}, {name : 'to_refresh_assertion_type_id', value : to_refresh_assertion_type_id}]
  refresh_post(null, "<%= raw assertions_path() %>/" + assertion_id + "/?article_key=<%= @article.key %>", p, 'put', {})
 }
})

$(".assertion_type_container").on("click", ".del_rel", function(e){
 if (confirm("Please confirm you want to delete this entry")){
  var t = this.id.split("_")
  var subject_id = t[2]
  var complement_id = t[3]
  var card = $(this).parents()[3]
  $(card).css({'background-color' : 'red'})
  $("#ontop_popup_window").removeClass("hidden")
  var to_refresh_assertion_type_id = $(this).parents(".assertion_type_container").first().attr("id").split("_")[3]

  var p = [
   {name : 'assertion[obsolete]', value : true},
   {name : 'complement_id', value : complement_id},
   {name : 'to_refresh_assertion_type_id', value : to_refresh_assertion_type_id},
   {name : 'rel_type_id', value : t[4]}
  ]
  refresh_post(null, "<%= raw assertions_path() %>/" + subject_id + "/?article_key=<%= @article.key %>", p, 'put', {})
 }
})

$("#side_panel_content").on("click", ".del_rel", function(e){
 var t = this.id.split("_")
 var subject_id = t[2]
 var complement_id = t[3]
 var card = $(this).parents()[3]
 $(card).css({'background-color' : 'red'})
 $("#ontop_popup_window").removeClass("hidden")
// var to_refresh_assertion_type_id = $(this).parents(".assertion_type_container").first().attr("id").split("_")[3]

 var p = [
  {name : 'assertion[obsolete]', value : true},
  {name : 'complement_id', value : complement_id},
  {name : 'refresh_side_panel', value : t[4]},
  {name : 'rel_type_id', value : t[4]}
 ]
 refresh_post(null, "<%= raw assertions_path() %>/" + subject_id + "/?article_key=<%= @article.key %>", p, 'put', {})
})

/*$(".assertion_type_container").on("click", ".show-assessment-btn", function(e){
 var assessment_id = this.id.split("_")[1]
 var a = "#assessment_" + assessment_id  
 if ($(a).hasClass('hidden')){
  $(a).css({'height' : '0px'})
  $(a).removeClass('hidden')
  $(a).animate({'height' : 'auto'}, 2000, function(){
  
  })
 }else{

 }


})
*/

$(window).resize(function() {
     adjust_windows();
})


/*
$(".assertion_type_container").on("click", ".assert_action", function(e){
})

$(".assertion_type_container").on("mouseover", ".assert_action", function(e){
$(this).css({color:'rgb(255, 255, 185)'})
})

$(".assertion_type_container").on("mouseout", ".assert_action", function(e){
$(this).css({color:""})
})
*/

<% end %>
