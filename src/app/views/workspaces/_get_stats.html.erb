<%# @h_all_claims_by_journal_type.to_json %>

<!-- Major claim 	Verified 	550
Major claim 	Challenged by reproducibility project 	11
Major claim 	Partially verified 	75
Major claim 	Challenged 	27
Major claim 	Challenged by same authors 	5
Major claim 	Reproduction in progress 	31
Major claim 	Unchallenged, logically consistent 	105
Major claim 	Unchallenged 	132
Major claim 	Verified by same authors 	44
Major claim 	Mixed 	12
Major claim 	Unchallenged, logically inconsistent
  -->


<div class='float-right'>
<%= link_to 'List of assessments', get_stats_workspace_path(:key => @workspace.key, :format => "text", :type => 'assessment'), :class => 'btn btn-primary' %>
<%= link_to 'List of evidences', get_stats_workspace_path(:key => @workspace.key, :format => "text", :type => 'evidence'), :class => 'btn btn-primary' %>
<%= link_to 'List of comments', get_stats_workspace_path(:key => @workspace.key, :format => "text", :type => 'comment'), :class => 'btn btn-primary' %>
</div>
<h5>Stats</h5>

<%# @h_assertions_by_type.keys.map{|k| @h_assertion_types[k].name + " => " + @h_assertions_by_type[k].size.to_s} %>
<br/>

<table>
<thead>
  <tr>
    <th>Title</th>
    <th>Number</th>
  </tr>
</thead>
<tbody> 
<tr><td>Number of articles</td><td><%= @articles.size %></td></tr>
<% @assertion_types.select{|at| @h_assertions_by_type[at.id]}.each do |at| %>
<tr><td>Number of <%= @h_assertion_types[at.id].label.pluralize.downcase %></td><td><%= @h_assertions_by_type[at.id].size %></td></tr>
<% end %>
</tbody>
</table>


<br/><br/>

<table>
<thead>
  <tr>
    <th>Claim type</th>
    <th>Assessment type</th>
    <th>Number</th>
  </tr>
</thead>
<tbody>
<% @assessement_type_by_claim_type.each_key do |k1| %>
<% @assessement_type_by_claim_type[k1].each_key do |k2| %>
<tr>
<td><%= @h_assertion_types[k1].label %></td>
<td><%= @h_assessment_types[k2].name %></td>
<td><%= @assessement_type_by_claim_type[k1][k2].size %></td>
</tr>
<% end %>
<% end %>
</tbody>
</table>

Summary by group

<table>
<thead>
  <tr>
    <th>Claim type</th>
    <th>Assessment type</th>
    <th>Number</th>
    <th>Percent</th>
  </tr>
</thead>
<tbody>

<% @assessement_type_by_claim_type.each_key do |k1| %>
<% tmp_h = {} %>
<% @assessement_type_by_claim_type[k1].each_key do |k2| %>
<% tmp_h[@h_rev_groups[@h_assessment_types[k2].name]] ||= 0 %>
<% tmp_h[@h_rev_groups[@h_assessment_types[k2].name]] += @assessement_type_by_claim_type[k1][k2].size %>
<% end %>
<% total = tmp_h.values.sum %>

<% tmp_h.each_key do |k2| %>
<td><%= @h_assertion_types[k1].label %></td>
<td><%= k2 %></td>
<td><%= tmp_h[k2] %></td>
<td><%= (tmp_h[k2].to_i * 100.to_f / total).round(1) %>%</td>
</tr>
<% end %>
<% end %>

</tbody>
</table>

<div id='plot_irreproducibility'></div>
<div id='plot_irreproducibility2'></div>

<div id='plot_evo'></div>
<div id='plot_evo2'></div>

<div id='plot_categories'></div>
<div id='plot_journal_types'></div>
<div id='plot_journal_types2'></div>


Irreproducibility of major claims by journal

<table id='irreproducibility_by_journal'>
  <thead>
    <tr>
      <th>Journal</th>
      <% @time_intervals.each do |e| %>
      <th><%= e[0] || "<" %>-<%= e[1] || '>' %></th>
      <th># <%=  e[0] || "<" %>-<%= e[1] || '>' %></th>
      <% end %>
      <th>Total irr</th>
      <th>Total</th>
      <th>Total %</th>
    </tr>
  </thead>
  <tbody>
    <%# @journals.select{|j| @all_claims_by_journal[j.id] or @irreproducible_claims_by_journal[j.id]}.each do |j| %>
    <% @journals.select{|j| @all_claims_by_journal[j.id]}.each do |j| %>
    <tr>
      <td><%= j.name.html_safe %></td>
      <% total_irr = 0 %>
      <% total = 0 %>
      <% @time_intervals.each_index do |i| %>
      <td><%= (@all_claims_by_journal[j.id] and @all_claims_by_journal[j.id][i] and @all_claims_by_journal[j.id][i].size > 0) ? ((@irreproducible_claims_by_journal[j.id]) ? (@irreproducible_claims_by_journal[j.id][i].size * 100.to_f / @all_claims_by_journal[j.id][i].size).round(1) : 0) : '' %>
		 
	<% total_irr+= (@irreproducible_claims_by_journal[j.id][i]) ? @irreproducible_claims_by_journal[j.id][i].size : 0 %>
	<% total+= (@all_claims_by_journal[j.id][i]) ? @all_claims_by_journal[j.id][i].size : 0 %>
	<%# (@irreproducible_claims_by_journal[j.id]) ? @irreproducible_claims_by_journal[j.id][i].size : 0 %>
	<%# (@all_claims_by_journal[j.id]) ? @all_claims_by_journal[j.id][i].size : 0 %></td>
<td><%= (@all_claims_by_journal[j.id] and @all_claims_by_journal[j.id][i] and @all_claims_by_journal[j.id][i].size > 0) ?  ((@irreproducible_claims_by_journal[j.id]) ? @irreproducible_claims_by_journal[j.id][i].size : 0) : '' %></td>
      <% end %>
      <td><%= total_irr %></td>
      <td><%= total %></td>
      <td><%= (total) ? total_irr *100.to_f/total : '' %></td>
    </tr>
    <% end %>
  </tbody>
</table>

<%= javascript_tag do %>

$("#irreproducibility_by_journal").DataTable()

var time_intervals =<%= raw @time_intervals.to_json %>
var irreproducible_claims = <%= raw @irreproducible_claims.to_json %>
var all_claims = <%= raw @all_claims.to_json %>

var h_claims_evo = <%= raw @h_claims_evo.to_json %>

var x = []
for (var i = 0; i < time_intervals.length; i++){
  if (time_intervals[i][0] == null) {
		    x.push("Before " + time_intervals[i][1])
  }else{
		    if (time_intervals[i][1] == null){
x.push("After " + time_intervals[i][0])
		    }else{
x.push(time_intervals[i][0] + " to " + time_intervals[i][1])
		    }
		    }
}

var data = [
  {
    x: x,
    y: irreproducible_claims.map((e, i) => e.length *100 / all_claims[i].length),
    type: 'bar'    
  }
];

  var layout = {
  title: {text: 'Percentage of irreproducible claims', font: {size: 24}},
  xaxis: { title: {text: ''},  tickfont: {size: 18}},
  yaxis: { title: {text: '', font: {size: 18}},  tickfont: {size: 18} },
  width: 500
 }


  
var data2 = [
  {
    x: x,
    y: irreproducible_claims.map((e, i) => all_claims[i].length),
    type: 'bar'
  }
  ];
  
  var layout2 = {
  title: {text: 'Total number of major claims', font: {size: 24}},
  xaxis: { title: {text: ''},  tickfont: {size: 18}},
  yaxis: { title: {text: '', font: {size: 18}},  tickfont: {size: 18} },
  width: 500
  }

  Plotly.newPlot('plot_irreproducibility', data, layout);
  Plotly.newPlot('plot_irreproducibility2', data2, layout2);

  var data3 = <%= raw @categories_data.to_json %>
  var layout3 = {
   barmode: 'stack',  
   title: { text: 'Proportion of major claims in broad categories', font: {size: 24}},
   xaxis: { title: {text: ''},  tickfont: {size: 18}},
   yaxis: { title: {text: 'Proportion of major claims', font: {size: 18}},  tickfont: {size: 18} },
   width: 500

  }


  Plotly.newPlot('plot_categories', data3, layout3)


  var data4 = [{
    y: <%= raw @journal_types.map{|jt| @irreproducible_claims_by_journal_type[jt].size.to_f*100/@all_claims_by_journal_type[jt].size}.to_json %>, //[10, 20, 30],
  x: <%= raw @journal_types.to_json %>,
  hovertext: <%= raw @journal_types.map{|jt| @irreproducible_claims_by_journal_type[jt].size.to_s + "/" + @all_claims_by_journal_type[jt].size.to_s + " (" + (@irreproducible_claims_by_journal_type[jt].size.to_f*100/@all_claims_by_journal_type[jt].size).round(2).to_s + "%)"}.to_json %>,
    hoverinfo: 'text',
    type: 'bar'
  }];

  var layout4 = {
    title: {
        text: 'Challenged major claims by journal type',
        font: {
            size: 24
   }},
  xaxis: {
     title: {
        text: 'Categories',
        font: {
            size: 18
            }
  },
  tickfont: { size: 18}
  },
  yaxis: {
  title: {
   text: 'Values',
   font: {
            size: 18
            }
  },
  tickfont: {size: 18}
  },
  width: 500
  };

  Plotly.newPlot('plot_journal_types', data4, layout4);

  var data5 = []
  var cats = Object.keys(h_claims_evo)
  for (var j=0; j<cats.length; j++){
			data5.push({
			name: cats[j],
    x: x,
    y: h_claims_evo[cats[j]].map((e, i) => (e.length *100 / all_claims[i].length).toPrecision(4)),
    hovertext: h_claims_evo[cats[j]].map((e, i) => e.length + " (" + ((e.length *100 / all_claims[i].length).toPrecision(4)) + "%)"),
    hoverinfo: 'text',
    type: 'bar'
   });
    }
    
  var layout = {
   title: {text: 'Percentage of claims by category over time', font: {size: 24}},
   xaxis: { title: {text: ''},  tickfont: {size: 18}},
   yaxis: { title: {text: '', font: {size: 18}},  tickfont: {size: 18} },
   width: 500
  }

   Plotly.newPlot('plot_evo', data5, layout);


    var data6 =[]
    <% @h_claims_by_journal_type.each_key do |cat| %>
        data6.push({
    y: <%= raw @journal_types.map{|jt| @h_claims_by_journal_type[cat][jt].size.to_f*100/@h_all_claims_by_journal_type[cat][jt].size}.to_json %>, //[10, 20, 30],
    x: <%= raw @journal_types.to_json %>,
    hovertext: <%= raw @journal_types.map{|jt| @h_claims_by_journal_type[cat][jt].size.to_s + "/" + @h_all_claims_by_journal_type[cat][jt].size.to_s + " (" + (@h_claims_by_journal_type[cat][jt].size.to_f*100/@h_all_claims_by_journal_type[cat][jt].size).round(2).to_s + "%)"}.to_json %>,
    hoverinfo: 'text', 
				 name: '<%= cat %>', 
				  type: 'bar'
				  });
    <% end %>
				  

  var layout4 = {
    title: {
        text: 'Challenged major claims by journal type and category',
        font: {
            size: 24
   }},
  xaxis: {
     title: {
        text: 'Categories',
        font: {
            size: 18
            }
  },
  tickfont: { size: 18}
  },
  yaxis: {
  title: {
   text: 'Values',
   font: {
            size: 18
            }
  },
  tickfont: {size: 18}
  },
  width: 500
  };

  Plotly.newPlot('plot_journal_types2', data6, layout4);



 
    
  
  <% end %>
